// Generated by CoffeeScript 1.4.0
(function() {

  jQuery.fn.blockLevelr = function(settings) {
    var columns, config, heightChange, heightCheck, init,
      _this = this;
    config = {
      minHeight: 0,
      perRow: 0,
      emBase: false
    };
    if (settings) {
      jQuery.extend(config, settings);
    }
    columns = null;
    init = function() {
      columns = jQuery(_this);
      heightCheck();
    };
    heightCheck = function() {
      var column, i, numRow, targetHeight, _i, _len;
      numRow = 0;
      targetHeight = new Array();
      targetHeight[numRow] = config.minHeight;
      for (i = _i = 0, _len = columns.length; _i < _len; i = ++_i) {
        column = columns[i];
        if (columns.eq(i).outerHeight() > targetHeight[numRow]) {
          targetHeight[numRow] = columns.eq(i).outerHeight();
        }
        if ((i + 1) % config.perRow === 0) {
          numRow++;
          targetHeight[numRow] = config.minHeight;
        }
      }
      heightChange(targetHeight);
    };
    heightChange = function(targetHeight) {
      var column, i, individualTagret, individualTarget, numRow, _i, _len;
      numRow = 0;
      individualTagret = 0;
      for (i = _i = 0, _len = columns.length; _i < _len; i = ++_i) {
        column = columns[i];
        if (columns.eq(i).css('box-sizing') === 'content-box') {
          individualTarget = targetHeight[numRow] - (columns.eq(i).outerHeight() - columns.eq(i).height());
        } else {
          individualTarget = targetHeight[numRow];
        }
        if (config.emBase !== false) {
          columns.eq(i).css('height', "" + (individualTarget / config.emBase) + "em");
        } else {
          columns.eq(i).css('height', "" + individualTarget + "px");
        }
        if ((i + 1) % config.perRow === 0) {
          numRow++;
        }
      }
    };
    this.recheck = function() {
      columns.css('height', 'auto');
      heightCheck();
    };
    init();
    return this;
  };

}).call(this);
